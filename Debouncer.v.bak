module Debouncer (
    input clk,
    input noisy_switch,
    output reg debounced_switch
);
    reg [15:0] counter = 16'b0;
    reg stable_state = 1'b0;
    reg last_state = 1'b0;

    always @(posedge clk) begin
        if (noisy_switch == last_state) begin
            if (counter < 16'hFFFF) begin
                counter <= counter + 1;
            end else if (stable_state != last_state) begin
                stable_state <= last_state;
            end
        end else begin
            counter <= 16'b0;
        end
        last_state <= noisy_switch;
        debounced_switch <= stable_state;
    end
endmodule

